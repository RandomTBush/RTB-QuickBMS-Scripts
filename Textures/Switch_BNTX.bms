# Nintendo Switch - BNTX, BFRES and BFFNT to DDS
# Written by Random Talking Bush

# Known bugs:
# Widths for textures that have irregular sizes will need to be manually cropped. Check the filenames for their actual dimensions.
# Some textures may still be glitched, the current method is hacky as heck, I'll see if I can find a better method later.
# If you come across one of those broken textures, change the TEXCROP value below from 1 to 0 and re-export to prevent the second half of the texture being deleted.
# You'll have to manually fix it, but trust me when I say it was originally much, *MUCH* worse beforehand!
# Some ASTC-format textures may also be broken.
# Cubemaps aren't merged for the time being, and currently export as individual images.

# Updated September 19th, 2022: Fixed version 10 BFRES files (e.g. Splatoon 3) not working due to a failure in future-proofing (the version check was changed from "= 9" to ">= 9"), multi-BNTX BFRES files (e.g. Miitopia) will now export every texture instead of only the last archive, and swapped the "-" for image cropping reminders in filenames with "x".
# February 25th, 2022: Fixed R16_FLOAT textures (e.g. Pokémon Legends Arceus' terrain heightmaps) not being converted correctly.
# June 17th, 2020: Fixed BC2_UNORM / DXT3 textures (e.g. Pokémon Sword/Shield's trainer card frames) exporting incorrectly due to a wrong bit count! D'OH!
# March 22nd, 2020: Fixed Super Kirby Clash BFRES files not working due to a dumb oversight.
# November 15th, 2019: Fixed "Version 9" BFRES files not being detected, added R8A8_SNORM (SMM2, NSMBU normal maps), D32_FLOAT_S8X24_UINT and BC6H_SF16 (Pokémon Sword/Shield probe maps), fixed(?) another couple of texture size issues.
# November 16th, 2018: Fixed certain Splatoon 2 textures being incorrectly tiled, fixed textures with low heights being incorrectly tiled, added R4G4B4A4_UNORM (Hyrule Warriors: DE), 8x8 ASTC (BlazBlue Tag) and R5G5B5A1_UNORM (Pokémon Let's Go).
# April 13th, 2018: Fixed BC2_UNORM_SRGB textures not being converted correctly (seen in Kirby Star Allies's lyt files).

endian little

set ISFONT 0
set ADDDIMENSIONS 0
set TEXCROP 1
set BNTXCOUNT 0
getdstring BNTXMAGIC 0x04

if BNTXMAGIC = "FRES"

	goto 0x0A
	get BNTXVER2 byte
	goto 0x98
	if BNTXVER2 >= 9
		goto 0x20 0 SEEK_CUR
	endif
	get EXTFILESTARTOFF long
	goto 0xC8
	if BNTXVER2 >= 9
		goto 0x24 0 SEEK_CUR
	endif
	get EXTFILECOUNT short

	for y = 0 < EXTFILECOUNT

		goto EXTFILESTARTOFF
		get EXTFILESTART longlong
		get EXTFILESIZE longlong
		math EXTFILESTARTOFF + 16
		goto EXTFILESTART
		getdstring BNTXMAGIC 0x04

		if BNTXMAGIC = "BNTX"
			putarray 1 BNTXCOUNT EXTFILESTART
			getarray BNTXSTART 1 BNTXCOUNT
			math BNTXCOUNT += 1
		endif

		goto EXTFILESTARTOFF

	next y

elif BNTXMAGIC = "FFNT"

	set ISFONT 1
	set BNTXCOUNT 1
	goto 0x3C
	get GRIDX byte
	math GRIDX += 1
	get GRIDY byte
	math GRIDY += 1
	get FONTTOTAL byte

	goto 0x4C
	get WIDTH short
	get HEIGHT short
	get EXTFILESTART long
	putarray 1 0 EXTFILESTART

elif BNTXMAGIC = "BNTX"

	set BNTXCOUNT 1
	putarray 1 0 0

endif

for z = 0 < BNTXCOUNT

	getarray BNTXSTART 1 z
	goto BNTXSTART
	getdstring BNTXMAGIC 0x04
	if BNTXMAGIC = "BNTX"

		get BLANK long
		get UNKLONG1 long
		get ENDIAN short
		get UNKSHORT1 short

		get BNTXSTROFF long
		get UNKSHORT2 short
		get STROFF short
		get RLTOFF long
		get BNTXSIZE long

		get NXMAGIC long
		get FILETOTAL long
		get FILESTARTOFF long
		get 64BITPAD long

		get BRTDSTART long
		get 64BITPAD long
		get DICSTARTOFF long
		get 64BITPAD long

		get UNKLONG3 long

		math FILESTARTOFF + BNTXSTART
		goto FILESTARTOFF

		for i = 0 < FILETOTAL

			get BRTISTART long
			get 64BITPAD long
			putarray 0 i BRTISTART

		next i

		math BRTDSTART + BNTXSTART
		goto BRTDSTART

		get BRTDMAGIC long
		get BLANK long
		get BRTDSIZE long
		get BLANK long
		savepos TEXSTART

		for i = 0 < FILETOTAL

			getarray BRTISTART 0 i

			math BRTISTART + BNTXSTART
			goto BRTISTART

			get BRTIMAGIC long
			get BRTILENGTH long
			get BRTILENGTH64 long
			get 64BITPAD long

			get UNKBRTI1 long # 01020000, never changes (513)?
			get UNKBRTI1B short # 0000
			get MIPCOUNT short # 0C00
			get UNKBRTI2 long # 01000000, never changes (1)?
			get TXFORMAT long # 061A0000

			get UNKBRTI4 long # 20000000, never changes (32)?
			get WIDTH long
			get HEIGHT long
			get UNKBRTI5 long # 01000000, never changes (1)?

			get FACETOTAL long # 01000000
			get UNKBRTI7 long # 04000000
			get UNKBRTI8 long # 07000100, never changes (65543)?
			get BLANK long # 00000000

			get BLANK long # 00000000
			get BLANK long # 00000000
			get BLANK long # 00000000
			get BLANK long # 00000000

			get BRTISIZE long # 00B80A00
			get UNKBRTI9 long # 00020000, never changes?
			get BRTIFLAG1 byte # 02
			get BRTIFLAG2 byte # 03 / 00 / 02
			get BRTIFLAG3 byte # 04 / 00 / 01 / 02
			get BRTIFLAG4 byte # 01 / 02 / 05
			get TXTYPE long # 01
			# 0x01 - Texture
			# 0x03 - Cubemap
			# 0x05 - Font
			# 0x08 - CubemapFar

			# print "Unknown values = %UNKBRTI1B%, %UNKBRTI7%, Type: %TXTYPE%, Flags: %BRTIFLAG1%, %BRTIFLAG2%, %BRTIFLAG3%, %BRTIFLAG4%"

			get BRTISTROFF long # A0020000
			get 64BITPAD long # 00000000
			get UNKBRTI11 long # 20000000, never changes?
			get 64BITPAD long # 00000000

			get BRTIMIPOFF long # 60070000
			get 64BITPAD long # 00000000
			get BRTIUNKOFF1 long # 00000000
			get 64BITPAD long # 00000000

			get BRTIUNKOFF2 long # 60050000
			get 64BITPAD long # 00000000
			get BRTIUNKOFF3 long # 60060000
			get 64BITPAD long # 00000000

			math BRTISTROFF + BNTXSTART
			goto BRTISTROFF
			get STRLENGTH short
			getdstring STRNAME STRLENGTH

			math BRTIMIPOFF + BNTXSTART
			goto BRTIMIPOFF
			get BRTIMIPSTART long
			get 64BITPAD long

			math BRTIMIPSTART + BNTXSTART
			math BRTISIZE / FACETOTAL

			for f = 0 < FACETOTAL

				log MEMORY_FILE 0 0
				log MEMORY_FILE2 0 0
				log MEMORY_FILE3 0 0
				log MEMORY_FILE4 0 0

				set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x80\x00\x00\x00\x80\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x54\x31\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

				endian big

				set BITPERPIX 4
				set BLOCKSIZE 512
				set ISCOMPRESSED 1
				set TEXFIX 0

				get PATH basename
				string PATH += /
				getarray BRTISTART 0 i
				string PATH += STRNAME

				if TXFORMAT = 0x0201 # R8_UNORM
					set BITPERPIX 8
					set BLOCKSIZE 128
					set ISCOMPRESSED 0
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x0F\x10\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x08\x00\x00\x00\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					print "R8_UNORM TEXTURE (0x0201)"

				elif TXFORMAT = 0x0301 # R4G4B4A4_UNORM
					set BITPERPIX 16
					set BLOCKSIZE 128
					set ISCOMPRESSED 0
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x0F\x00\x00\x00\xF0\x00\x00\x00\x00\x0F\x00\x00\x00\xF0\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					print "R4G4B4A4_UNORM TEXTURE (0x0201)"

				elif TXFORMAT = 0x0501 # R5G5B5A1_UNORM
					set BITPERPIX 16
					set BLOCKSIZE 128
					set ISCOMPRESSED 0
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x1F\x00\x00\x00\xE0\x03\x00\x00\x00\x7C\x00\x00\x00\x80\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					print "R5G5B5A1_UNORM TEXTURE (0x0501)"

				elif TXFORMAT = 0x0701 # B5G6R5_UNORM
					set BITPERPIX 16
					set BLOCKSIZE 128
					set ISCOMPRESSED 0
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x40\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\xF8\x00\x00\xE0\x07\x00\x00\x1F\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					print "B5G5R5_UNORM TEXTURE (0x0701)"

				elif TXFORMAT = 0x0901 # R8A8_UNORM
					set BITPERPIX 16
					set BLOCKSIZE 128
					set ISCOMPRESSED 0
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x01\x00\x02\x00\x00\x00\x00\x00\x10\x00\x00\x00\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					print "R8A8_UNORM TEXTURE (0x0901)"

				elif TXFORMAT = 0x0902 # R8A8_SNORM
					set BITPERPIX 16
					set BLOCKSIZE 128
					set ISCOMPRESSED 0
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x33\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "R8A8_SNORM TEXTURE (0x0902)"

				elif TXFORMAT = 0x0A01 # R16_UNORM
					set BITPERPIX 16
					set BLOCKSIZE 128
					set ISCOMPRESSED 0
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x37\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "R16_UNORM TEXTURE (0x0A01)"

				elif TXFORMAT = 0x0A05 # R16_FLOAT
					set BITPERPIX 16
					set BLOCKSIZE 128
					set ISCOMPRESSED 0
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x36\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "R16_FLOAT TEXTURE (0x0A05)"

				elif TXFORMAT = 0x0B01 # R8G8B8A8_UNORM / RGBA32
					set BITPERPIX 32
					set BLOCKSIZE 128
					set ISCOMPRESSED 0
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x80\x00\x00\x00\x80\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x08\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					print "R8G8B8A8_UNORM TEXTURE (0x0B01)"

				elif TXFORMAT = 0x0B06 # R8G8B8A8_UNORM_SRGB / RGBA32
					set BITPERPIX 32
					set BLOCKSIZE 128
					set ISCOMPRESSED 0
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x08\x00\x80\x00\x00\x00\x80\x00\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x41\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x00\x00\x00\x00\xFF\x08\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
					print "R8G8B8A8_UNORM_SRGB TEXTURE (0x0B06)"

				elif TXFORMAT = 0x0F05 # R11G11B10_FLOAT
					set BITPERPIX 32
					set BLOCKSIZE 128
					set ISCOMPRESSED 0
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1A\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "R11G11B10_FLOAT TEXTURE (0x0F05)"

				elif TXFORMAT = 0x1405 # R32_FLOAT
					set BITPERPIX 32
					set BLOCKSIZE 128
					set ISCOMPRESSED 0
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x29\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "R32_FLOAT TEXTURE (0x1405)"

				elif TXFORMAT = 0x1505 # D32_FLOAT_S8X24_UINT
					set BITPERPIX 64
					set BLOCKSIZE 128
					set ISCOMPRESSED 0
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "D32_FLOAT_S8X24_UINT TEXTURE (0x1505)"

				elif TXFORMAT = 0x1A01 # BC1_UNORM / DXT1
					set BITPERPIX 4
					set BLOCKSIZE 512
					print "BC1_UNORM / DXT1 TEXTURE (0x1A01)"

				elif TXFORMAT = 0x1A06 # BC1_UNORM_SRGB / DXT1
					set BITPERPIX 4
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x48\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "BC1_UNORM_SRGB / DXT1 TEXTURE (0x1A06)"

				elif TXFORMAT = 0x1B01 # BC2_UNORM / DXT3
					putVarChr MEMORY_FILE 0x57 0x33 byte
					set BITPERPIX 8
					set BLOCKSIZE 512
					print "BC2_UNORM / DXT3 TEXTURE (0x1B01)"

				elif TXFORMAT = 0x1B06 # BC2_UNORM_SRGB / DXT3
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x4B\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "BC2_UNORM_SRGB / DXT3 TEXTURE (0x1B06)"

				elif TXFORMAT = 0x1C01 # BC3_UNORM / DXT5
					putVarChr MEMORY_FILE 0x57 0x35 byte
					set BITPERPIX 8
					set BLOCKSIZE 512
					print "BC3_UNORM / DXT5 TEXTURE (0x1C01)"

				elif TXFORMAT = 0x1C06 # BC3_UNORM_SRGB / DXT5
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x4E\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "BC3_UNORM_SRGB / DXT5 TEXTURE (0x1C06)"

				elif TXFORMAT = 0x1D01 # BC4_UNORM / ATI1 
					putVarChr MEMORY_FILE 0x54 0x41544931 long
					set BITPERPIX 4
					set BLOCKSIZE 512
					print "BC4_UNORM / ATI1 TEXTURE (0x1D01)"

				elif TXFORMAT = 0x1D02 # BC4_SNORM / ATI1 
					set BITPERPIX 4
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x51\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "BC4_SNORM / ATI1 TEXTURE (0x1D02)"

				elif TXFORMAT = 0x1E01 # BC5_UNORM / ATI2
					putVarChr MEMORY_FILE 0x54 0x41544932 long
					set BITPERPIX 8
					set BLOCKSIZE 512
					print "BC5_UNORM / ATI2 TEXTURE (0x1E01)"

				elif TXFORMAT = 0x1E02 # BC5_SNORM / ATI2
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x54\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "BC5_SNORM / ATI2 TEXTURE (0x1E02)"

				elif TXFORMAT = 0x1F05 # BC6H_SF16?
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x60\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "BC6H_SF16 TEXTURE (0x1F05)"

				elif TXFORMAT = 0x1F0A # BC6H_UF16
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x5F\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "BC6H_UF16 TEXTURE (0x1F01)"

				elif TXFORMAT = 0x2001 # BC7_UNORM
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x62\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "BC7_UNORM TEXTURE (0x2001)"

				elif TXFORMAT = 0x2006 # BC7_UNORM_SRGB
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x63\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"
					print "BC7_UNORM_SRGB TEXTURE (0x2006)"

				elif TXFORMAT = 0x2D01 # ASTC 4x4 (thanks, gdkchan!)
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x13\xAB\xA1\x5C\x04\x04\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00"
					print "ASTC_4x4 TEXTURE (0x2D01)"

				elif TXFORMAT = 0x2D06 # ASTC 4x4 SRGB (thanks, gdkchan!)
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x13\xAB\xA1\x5C\x04\x04\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00"
					print "ASTC_4x4_SRGB TEXTURE (0x2D06)"

				elif TXFORMAT = 0x2E01 # ASTC 5x4 (thanks, gdkchan!)
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x13\xAB\xA1\x5C\x05\x04\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00"
					print "ASTC_5x4 TEXTURE? (0x2E01), UNSUPPOTED!"
					string PATH + .UNKNOWN

				elif TXFORMAT = 0x2E06 # ASTC 5x4 SRGB (thanks, gdkchan!)
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x13\xAB\xA1\x5C\x05\x04\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00"
					print "ASTC_5x4_SRGB TEXTURE? (0x2E06)"
					string PATH + .UNKNOWN

				elif TXFORMAT = 0x2F01 # ASTC 5x5 (thanks, gdkchan!)
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x13\xAB\xA1\x5C\x05\x05\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00"
					print "ASTC_5x5 TEXTURE (0x2F01)"

				elif TXFORMAT = 0x2F06 # ASTC 5x5 SRGB (thanks, gdkchan!)
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x13\xAB\xA1\x5C\x05\x05\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00"
					print "ASTC_5x5_SRGB TEXTURE (0x2F06), UNSUPPORTED!"

				elif TXFORMAT = 0x3001 # ASTC 6x5 (thanks, gdkchan!)
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x13\xAB\xA1\x5C\x06\x05\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00"
					print "ASTC_6x5 TEXTURE (0x3001), UNSUPPORTED!"
					string PATH + .UNKNOWN

				elif TXFORMAT = 0x3006 # ASTC 6x5 SRGB (thanks, gdkchan!)
					set BITPERPIX 8
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x13\xAB\xA1\x5C\x06\x05\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00"
					print "ASTC_6x5_SRGB TEXTURE (0x3006), UNSUPPORTED!"
					string PATH + .UNKNOWN

				elif TXFORMAT = 0x3401 # ASTC 8x8 (thanks, gdkchan!)
					set BITPERPIX 4
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x13\xAB\xA1\x5C\x08\x08\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00"
					if HEIGHT <= 512
						set TEXFIX 1
					endif
				print "ASTC_8x8 TEXTURE (0x3401)"

				elif TXFORMAT = 0x3406 # ASTC 8x8 SRGB (thanks, gdkchan!)
					set BITPERPIX 4
					set BLOCKSIZE 512
					set MEMORY_FILE binary "\x13\xAB\xA1\x5C\x08\x08\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00"
					if HEIGHT <= 512
						set TEXFIX 1
					endif
				print "ASTC_8x8_SRGB TEXTURE (0x3406)"

				else
					print "UNKNOWN FORMAT (%TXFORMAT%)"
					string PATH + .UNKNOWN
				endif

				if f = 0
					math ACTUALWIDTH = WIDTH
					math ACTUALHEIGHT = HEIGHT
				endif

				if ISCOMPRESSED = 1
					if BITPERPIX = 4
						math WIDTH x 32
					elif BITPERPIX = 8
						math WIDTH x 16
					endif
				else
					if BITPERPIX = 4
						math WIDTH x 128
					elif BITPERPIX = 8
						math WIDTH x 64
					elif BITPERPIX = 16
						math WIDTH x 32
					elif BITPERPIX = 32
						math WIDTH x 16
					endif
				endif

				if HEIGHT < 32
					set HEIGHT 32
				elif HEIGHT > 32 && HEIGHT < 64
					set HEIGHT 64
				elif HEIGHT > 64 && HEIGHT < 128
					set HEIGHT 128
				elif HEIGHT > 128 && HEIGHT < 256
					set HEIGHT 256
				elif HEIGHT > 256 && HEIGHT < 512
					set HEIGHT 512
				elif HEIGHT > 512 && HEIGHT < 1024
					set HEIGHT 1024
				elif HEIGHT > 1024 && HEIGHT < 2048
					set HEIGHT 2048
				elif HEIGHT > 2048 && HEIGHT < 4096
					set HEIGHT 4096
				elif HEIGHT > 4096 && HEIGHT < 8192
					set HEIGHT 8192
				endif

				# I really need to troubleshoot the crap outta this.

				if ISCOMPRESSED = 1
					if ACTUALHEIGHT > 32 and ACTUALHEIGHT <= 40
						set TEXFIX 1
					endif

					if ACTUALHEIGHT > 64 and ACTUALHEIGHT <= 84
						set TEXFIX 1
					endif

					if ACTUALHEIGHT > 128 and ACTUALHEIGHT <= 168
						set TEXFIX 1
					endif

					if ACTUALHEIGHT > 256 and ACTUALHEIGHT <= 340
						set TEXFIX 1
					endif
				endif

				if ISCOMPRESSED = 0 and BITPERPIX = 32
					if ACTUALHEIGHT > 8 and ACTUALHEIGHT <= 10
						set TEXFIX 1
					endif

					if ACTUALHEIGHT > 16 and ACTUALHEIGHT <= 22
						set TEXFIX 1
					endif

					if ACTUALHEIGHT > 32 and ACTUALHEIGHT <= 42
						set TEXFIX 1
					endif

					if ACTUALHEIGHT > 64 and ACTUALHEIGHT <= 84
						set TEXFIX 1
					endif
				endif

				if ACTUALWIDTH = WIDTH
					set ADDDIMENSIONS 0
				else
					set ADDDIMENSIONS 1
				endif

				if FACETOTAL > 1
					string PATH + _
					string PATH + f
				endif

				if ISFONT = 1
					string PATH + _
					string PATH + GRIDX
					string PATH + "x"
					string PATH + GRIDY
				else
					if ADDDIMENSIONS = 1
						string PATH += "("
						string PATH += ACTUALWIDTH
						string PATH += "x"
						string PATH += ACTUALHEIGHT
						string PATH += ")"
					endif
				endif

				if TXFORMAT < 0x2D00
					string PATH + .dds
				else
					string PATH + .astc
				endif

				set PIXOFFS 0
				set PIXOFFSTART 0
				set BLOCKNUM 0
				set BLOCKS 1

				if HEIGHT > BLOCKSIZE
					math BLOCKS = HEIGHT
					math BLOCKS / BLOCKSIZE
				endif

				math MIPSIZE = WIDTH
				math MIPSIZE * HEIGHT
				math MIPSIZE * BITPERPIX
				math MIPSIZE / 8
				math NEXTBLOCK = HEIGHT
				if ISCOMPRESSED = 1
					math NEXTBLOCK * 16
				else
					math NEXTBLOCK * 64
				endif
				math BLOCKEND = HEIGHT
				if ISCOMPRESSED = 1
					math BLOCKEND * 16
					if TEXFIX = 1
						math BLOCKEND / 2
					endif
				else
					math BLOCKEND * 64
				endif

				if TEXFIX = 1
					math NEXTBLOCK / 2
				endif

				math NEXTBLOCK - 0x100

				if NEXTBLOCK < 0
					set NEXTBLOCK 0
				endif

				if f > 0
					math BRTIMIPSTART + BRTISIZE
				endif

				# if f = 0
				# print "Faces: %FACETOTAL%, Mips: %MIPCOUNT% - Size = %MIPSIZE%, BlockStart = %NEXTBLOCK% - End = %BLOCKEND%, Tex Start = %BRTIMIPSTART% - Size = %BRTISIZE%"
				# endif

				log MEMORY_FILE2 BRTIMIPSTART BRTISIZE

				# Just to make sure we have enough "padding".
				append
				log MEMORY_FILE2 BRTIMIPSTART BRTISIZE
				log MEMORY_FILE2 BRTIMIPSTART BRTISIZE
				log MEMORY_FILE2 BRTIMIPSTART BRTISIZE
				append

				endian little
				if TXFORMAT < 0x2D00
					if TEXCROP = 1
						putVarChr MEMORY_FILE 0x0C ACTUALHEIGHT long
					else
						putVarChr MEMORY_FILE 0x0C HEIGHT long
					endif
					putVarChr MEMORY_FILE 0x10 WIDTH long
					putVarChr MEMORY_FILE 0x14 MIPSIZE long
				else
					putVarChr MEMORY_FILE 0x07 WIDTH short
					putVarChr MEMORY_FILE 0x0A HEIGHT short
				endif
				endian big

				math DATAEND = NEXTBLOCK
				math DATAEND / BLOCKS

				# Don't ask how this is all done, it's pretty much held together with duct tape.

				Do

					math PIXOFFS = PIXOFFSTART
					# print "Offset = %PIXOFFSTART%"

					Do

						for l = 0 < BLOCKS

						if l > 0
							math PIXOFFS - 0x100
							math PIXOFFS + 0x2000
						endif

						append
						log MEMORY_FILE3 PIXOFFS 0x10 MEMORY_FILE2
						math PIXOFFS + 0x20
						log MEMORY_FILE3 PIXOFFS 0x10 MEMORY_FILE2
						math PIXOFFS - 0x20
						append

						math PIXOFFS + 0x100

						append
						log MEMORY_FILE3 PIXOFFS 0x10 MEMORY_FILE2
						math PIXOFFS + 0x20
						log MEMORY_FILE3 PIXOFFS 0x10 MEMORY_FILE2
						math PIXOFFS - 0x20
						append

						if l = 0
							math PIXRET = PIXOFFS
						endif

						next l

						math PIXOFFS = PIXRET
						math PIXOFFS + NEXTBLOCK

					while PIXOFFS < MIPSIZE

					math BLOCKNUM + 1

					if BLOCKNUM = 1
						math PIXOFFSTART + 0x10
					elif BLOCKNUM = 2
						math PIXOFFSTART + 0x30
					elif BLOCKNUM = 3
						math PIXOFFSTART + 0x10
					elif BLOCKNUM = 4
						math PIXOFFSTART + 0x30
					elif BLOCKNUM = 5
						math PIXOFFSTART + 0x10
					elif BLOCKNUM = 6
						math PIXOFFSTART + 0x30
					elif BLOCKNUM = 7
						math PIXOFFSTART + 0x10
					elif BLOCKNUM = 8
						math PIXOFFSTART + 0x130
						set BLOCKNUM 0
					endif

				while PIXOFFSTART < DATAEND

				if BLOCKS > 1 or ISCOMPRESSED = 0 or TEXFIX = 1

					if ISCOMPRESSED = 1
						math HEIGHTSPLIT = HEIGHT
						math HEIGHTSPLIT / 4
						math HEIGHTSPLIT / BLOCKS
						math LINESIZE = WIDTH
						math LINESIZE * BITPERPIX
						math LINESIZE / 2
						if TEXFIX = 1
							set BLOCKS 2
							math HEIGHTSPLIT / 2
						endif
					else
						math HEIGHTSPLIT = HEIGHT
						if TEXFIX = 1
							set BLOCKS 2
						endif
						math HEIGHTSPLIT / BLOCKS
						math LINESIZE = WIDTH
						math LINESIZE * BITPERPIX
						math LINESIZE / 8
					endif

					for k = 0 < BLOCKS
						math LINESTART = LINESIZE
						math LINESTART * k

						for l = 0 < HEIGHTSPLIT

							append
							log MEMORY_FILE4 LINESTART LINESIZE MEMORY_FILE3
							append

							for m = 0 < BLOCKS
								math LINESTART + LINESIZE
							next m

						next l

					next k

					get TEXSIZE asize MEMORY_FILE4

					append
					log MEMORY_FILE 0 TEXSIZE MEMORY_FILE4
					append

					else

						get TEXSIZE asize MEMORY_FILE3

						append
						log MEMORY_FILE 0 TEXSIZE MEMORY_FILE3
						append

				endif

				get SIZE asize MEMORY_FILE
				log PATH 0 SIZE MEMORY_FILE
				endian little

			next f

		next i

	endif

next z
